{"version":3,"file":"laravel-vapor.js","sources":["../src/index.js"],"sourcesContent":["const axios = require('axios')\n\nclass Vapor\n{\n    /**\n     * Store a file in S3 and return its UUID, key, and other information.\n     */\n    async store(file, options = null) {\n        const response = await axios.post('/vapor/signed-storage-url', {\n            'bucket': options.bucket || '',\n            'content_type': options.contentType || file.type,\n            'expires': options.expires || ''\n        });\n\n        let headers = response.data.headers;\n\n        if ('Host' in headers) {\n            delete headers.Host;\n        }\n\n        if (typeof options.progress === 'undefined') {\n            options.progress = () => {};\n        }\n\n        const s3Response = await axios.put(response.data.url, file, {\n            headers: headers,\n            onUploadProgress: (progressEvent) => {\n                options.progress(progressEvent.loaded / progressEvent.total);\n            }\n        });\n\n        response.data.extension = file.name.split('.').pop()\n\n        return response.data;\n    }\n}\n\nmodule.exports = new Vapor();\n"],"names":["const","axios","require","Vapor","store","file","options","post","bucket","contentType","type","expires","response","headers","data","Host","progress","put","url","onUploadProgress","progressEvent","loaded","total","s3Response","extension","name","split","pop","module","exports"],"mappings":"AAAAA,IAAMC,EAAQC,QAAQ,SAEhBC,2BAKIC,eAAMC,EAAMC,kBAAU,iCACDL,EAAMM,KAAK,4BAA6B,QACjDD,EAAQE,QAAU,gBACZF,EAAQG,aAAeJ,EAAKK,aACjCJ,EAAQK,SAAW,oBAH5BC,OAMFC,EAAUD,EAASE,KAAKD,cAExB,SAAUA,UACHA,EAAQE,UAGa,IAArBT,EAAQU,WACfV,EAAQU,uCAGaf,EAAMgB,IAAIL,EAASE,KAAKI,IAAKb,EAAM,SAC/CQ,EACTM,0BAAmBC,GACfd,EAAQU,SAASI,EAAcC,OAASD,EAAcE,yBAHxDC,UAONX,EAASE,KAAKU,UAAYnB,EAAKoB,KAAKC,MAAM,KAAKC,MAExCf,EAASE,6CAIxBc,OAAOC,QAAU,IAAI1B"}