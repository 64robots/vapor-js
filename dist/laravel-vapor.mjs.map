{"version":3,"file":"laravel-vapor.mjs","sources":["../src/index.js"],"sourcesContent":["const axios = require('axios')\n\nclass Vapor\n{\n    /**\n     * Store a file in S3 and return its UUID, key, and other information.\n     */\n    async store(file, options = null) {\n        console.log(file);\n\n        const response = await axios.post('/vapor/signed-storage-url', {\n            'bucket': options.bucket || '',\n            'content_type': options.contentType || file.type,\n            'expires': options.expires || ''\n        });\n\n        if (typeof options.progress === 'undefined') {\n            options.progress = () => {};\n        }\n\n        const s3Response = await axios.put(response.data.url, file, {\n            headers: response.data.headers,\n            onUploadProgress: (progressEvent) => {\n                options.progress(progressEvent.loaded / progressEvent.total);\n            }\n        });\n\n        return response.data;\n    }\n}\n\nmodule.exports = new Vapor();\n"],"names":["const","axios","require","Vapor","store","file","options","console","log","post","bucket","contentType","type","expires","response","progress","put","data","url","headers","onUploadProgress","progressEvent","loaded","total","s3Response","module","exports"],"mappings":"AAAAA,IAAMC,EAAQC,QAAQ,SAEhBC,2BAKIC,eAAMC,EAAMC,kBAAU,iBACxBC,QAAQC,IAAIH,mBAEWJ,EAAMQ,KAAK,4BAA6B,QACjDH,EAAQI,QAAU,gBACZJ,EAAQK,aAAeN,EAAKO,aACjCN,EAAQO,SAAW,oBAH5BC,eAM0B,IAArBR,EAAQS,WACfT,EAAQS,uCAGad,EAAMe,IAAIF,EAASG,KAAKC,IAAKb,EAAM,CACxDc,QAASL,EAASG,KAAKE,QACvBC,0BAAmBC,GACff,EAAQS,SAASM,EAAcC,OAASD,EAAcE,yBAHxDC,UAOCV,EAASG,6CAIxBQ,OAAOC,QAAU,IAAIvB"}